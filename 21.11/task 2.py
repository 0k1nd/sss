

'''403. Прыжок лягушки
Жесткий
Темы
Компании

Лягушка переправляется через реку. Река разделена на некоторое количество частей, 
и в каждой части может быть или не быть камня. Лягушка может прыгать на камень, но не должна прыгать в воду.

Учитывая список позиций камней (в единицах), отсортированный по возрастанию, определите, 
сможет ли лягушка пересечь реку, приземлившись на последний камень. Изначально лягушка находится на первом камне и предполагает, 
что первый прыжок должен составлять 1 единицу.

Если последний прыжок лягушки составил k единиц, ее следующий прыжок должен составлять либо k - 1, k или k + 1 единиц. 
Лягушка может прыгать только вперед.

 

Пример 1:

Ввод: камни = [0,1,3,5,6,8,12,17]
Вывод: правда
Пояснение: Лягушка может допрыгнуть до последнего камня, перепрыгнув на 1 единицу до 2-го камня, 
затем на 2 единицы до 3-го камня, затем на 2 единицы до 4-го камня, затем на 3 единицы до 6-го камня, на 4 единицы до 7-го камня, 
и 5 единиц до 8-го камня.

Пример 2:

Ввод: камни = [0,1,2,3,4,8,9,11]
Вывод: ложь
Пояснение: Невозможно допрыгнуть до последнего камня, поскольку расстояние между 5-м и 6-м камнями слишком велико.'''

stones = [0,1,3,5,6,8,11,14]
k = 1


def get_previous(ston):
    for i, ston in enumerate(stones):
        ston
        previous = dict[i - 1]
        return previous

    
for i in range(1, len(stones)):
    a, b = stones[i - 1], stones[i]
    if b - a == k:
        pass
    elif b - a == k-1:
        pass
    elif b - a == k+1:
        pass
    else:
        print('False')
        break
    k = b - a
    
    if i == len(stones)-1:
        print('True')
    
    

    

        